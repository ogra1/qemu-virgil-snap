name: qemu-virgil
adopt-info: qemu
base: core22
summary: QEMU as a snap, built from latest git with some fancy graphics extras
description: |
  The latest QEMU as a snap package with GTK, SDL2 and Virgil 3D enabled

  To read more about QEMU see https://www.qemu.org/
  To read more about Virgil 3D support go to https://virgil3d.github.io/

  The snap package source can be found at https://github.com/ogra1/qemu-virgil-snap

  If your system supports kvm please make sure to connect the kvm interface after
  you installed qemu-virgl.

  sudo snap connect qemu-virgil:kvm

  Then you can run the VM like below.

  qemu-virgil -enable-kvm -m 2048 -device AC97 -device virtio-vga-gl -display sdl,gl=on \
    -netdev user,id=ethernet.0,hostfwd=tcp::10022-:22 -device rtl8139,netdev=ethernet.0 \
    -soundhw ac97 /path/to/someimage.img

  For qemu-system-arm and qemu-system-aarch64 VMs the snap ships the
  qemu-virgil.arm and qemu-virgil.arm64 commands.

grade: stable
confinement: strict

architectures:
    - build-on: [ amd64 ]

layout:
  /usr/sbin/smbd:
    bind-file: $SNAP/usr/sbin/smbd
  /usr/share/seabios:
    bind: $SNAP/usr/share/seabios
  /usr/share/qemu:
    bind: $SNAP/usr/share/qemu

apps:
  qemu-virgil:
    extensions: [gnome]
    command: usr/bin/qemu-system-x86_64
    command-chain: [bin/runner]
    plugs:
      - audio-playback
      - audio-record
      - kvm
      - home
      - opengl
      - process-control
      - raw-usb
      - removable-media
      - screen-inhibit-control
      - network
      - network-bind
      - network-control
      - unity7
    environment:
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET:$SNAP/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/ceph

  arm64:
    extensions: [gnome]
    command: usr/bin/qemu-system-aarch64
    command-chain: [bin/runner]
    plugs:
      - audio-playback
      - audio-record
      - kvm
      - home
      - opengl
      - process-control
      - raw-usb
      - removable-media
      - screen-inhibit-control
      - network
      - network-bind
      - network-control
      - unity7
    environment:
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET:$SNAP/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/ceph

  arm:
    extensions: [gnome]
    command: usr/bin/qemu-system-arm
    command-chain: [bin/runner]
    plugs:
      - audio-playback
      - audio-record
      - kvm
      - home
      - opengl
      - process-control
      - raw-usb
      - removable-media
      - screen-inhibit-control
      - network
      - network-bind
      - network-control
      - unity7
    environment:
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET:$SNAP/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/ceph

  qemu-img:
    extensions: [gnome]
    command: usr/bin/qemu-img
    plugs:
      - home
      - removable-media
    environment:
      LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET:$SNAP/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/ceph

parts:
  cleanup:
    plugin: nil
    build-snaps: [ gnome-42-2204 ]
    stage-packages:
      - samba
      - libaio1
      - libbluetooth3
      - libboost-iostreams1.74.0
      - libboost-random1.74.0
      - libboost-thread1.74.0
      - libbrlapi0.8
      - libcephfs2
      - libfdt1
      - libflac8
      - libiscsi7
      - libjemalloc2
      - libnfs13
      - libnuma1
      - librados2
      - librbd1
      - libsdl2-2.0-0
      - libsdl2-image-2.0-0
      - libsnappy1v5
      - libsndio7.0
      - libusb-1.0-0
      - libusbredirparser1
      - libvdeplug2
      - libxencall1
      - libxenmisc4.16
      - libxendevicemodel1
      - libxenevtchn1
      - libxenforeignmemory1
      - libxengnttab1
      - libxenstore4
      - libxentoolcore1
      - libxentoollog1
      - libxi6
      - libxss1
      - ovmf
    stage:
      - -usr/share/qemu/firmware/*
    override-prime: |
      set -eux
      craftctl default
      cd /snap/gnome-42-2204/current
      find . -type f,l -exec rm -f $CRAFT_PRIME/{} \;
      for CRUFT in bug lintian man; do
        rm -rf $CRAFT_PRIME/usr/share/$CRUFT
      done

  virgl:
    after: [ cleanup ]
    source: https://gitlab.freedesktop.org/virgl/virglrenderer.git
    source-tag: '0.10.4'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
# ext:updatesnap
#   version-format:
#     format: 'virglrenderer-%M.%m.%R'
    build-packages:
      - libgbm-dev
      - libdrm-dev
      - libepoxy-dev
    prime:
      - -usr/include

  spice-protocol:
    source: https://gitlab.freedesktop.org/spice/spice-protocol.git
    source-tag: 'v0.14.4'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
    prime:
      - -usr/include

  spice-server:
    after: [ spice-protocol ]
    source: https://gitlab.freedesktop.org/spice/spice.git
    source-tag: 'v0.15.2'
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - -Dmanual=false
      - -Dtests=false
    override-build: |
      python3 -m pip install six pyparsing asciidoc
      craftctl default
    build-packages:
      - liblz4-dev
      - cmake
      - openssl
      - libssl-dev
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libopus-dev
    prime:
      - -usr/include

  qemu:
    after: [ virgl, spice-protocol, spice-server ]
    source: https://gitlab.com/qemu-project/qemu.git
    source-tag: 'v6.0.0'
    source-depth: 1
    plugin: nil
    override-pull: |
      craftctl default
      craftctl set version=$(git describe --tags --abbrev=10)
    override-build: |
      cd ..
      rm -rf $CRAFT_PART_BUILD
      mkdir -p $CRAFT_PART_BUILD
      cd $CRAFT_PART_BUILD
      cp -a $CRAFT_PART_SRC/* $CRAFT_PART_BUILD/
      cp /usr/include/linux/userfaultfd.h ./include/qemu/
      ./configure --prefix=/usr --target-list=x86_64-softmmu,aarch64-softmmu,arm-softmmu --audio-drv-list=pa,sdl --enable-libusb --enable-usb-redir --enable-sdl --enable-spice --disable-werror
      cd build
      make -j8
      make DESTDIR=$CRAFT_PART_INSTALL install
    build-packages:
      - bison
      - flex
      - gettext
      - libaio-dev
      - libbluetooth-dev
      - libbrlapi-dev
      - libbz2-dev
      - libcap-dev
      - libcap-ng-dev
      - libcurl4-gnutls-dev
      - libgtk-3-dev
      - libibverbs-dev
      - libjemalloc-dev
      - libjpeg8-dev
      - libncurses5-dev
      - libnuma-dev
      - librbd-dev
      - librdmacm-dev
      - libsasl2-dev
      - libsdl2-dev
      - libsdl2-image-dev
      - libseccomp-dev
      - libsnappy-dev
      - libusb-1.0-0-dev
      - libusbredirparser-dev
      - libvde-dev
      - libvdeplug-dev
      - libvte-2.91-dev
      - libxen-dev
      - liblzo2-dev
      - libx11-dev
      - libxml2-dev
      - libepoxy-dev
      - libglib2.0-dev
      - libfdt-dev
      - libpixman-1-dev
      - xfslibs-dev
      - zlib1g-dev
      - libnfs-dev
      - libiscsi-dev
      - libpulse-dev

  runner:
    after: [ qemu ]
    source: .
    plugin: nil
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp -av runner $CRAFT_PART_INSTALL/bin/

  smbd:
    after: [ runner ]
    plugin: nil
